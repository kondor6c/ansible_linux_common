---
- name: view kernel scsi devices
  find:
    paths: /sys/devices/pci*
    file_type: file
    patterns: 'scan'
    recurse: yes
  register: scsi_list
- name: Rescanning your SCSI bus to see new storage
  shell: "echo '- - -' > {{ item }}"
  loop: '{{ scsi_list.files }}'
  
  
- name: 'LVM'
  block:
    - name: 'create volume group'
      lvol:
        vg: "VG{{ d.name.split('_')[0] }}"
        lv: "LV{{ d.name.split('_')[1] }}"
        pvs: "{{ d.devices }}"
        size: "{{ d.size | default('100%FREE') }}"
      loop: "{{ disks }}"
      when: d.fs.split('_')[1] == 'lvm' 
      register: lvm
      loop_control:
        loop_var: d
    - name: create the filesystem
      filesystem:
        dev: "/dev/{{ d.fs }}"
        fstype: "{{ lv.fs.split('_')[0] }}"
        resizefs: yes
        opts: "{{ lv.fs_opts }}"
      loop: "{{ lvm }}"
      loop_control:
        loop_var: lv
  when: disks | selectattr('fs','match','_lvm')
- name: 'regular file system'
  filesystem:
    dev: "/dev/{{ d.fs }}"
    fstype: "{{ d.fs.split('_')[1] == 'lvm' }}"
    resizefs: yes
    opts: "{{ d.fs_opts }}"
  loop: "{{ disks }}"
  when: not d.fs | search('lvm') 
  loop_control:
    loop_var: d
    
- name: create the filesystem
  filesystem:
    dev: "/dev/{{ d.fs }}"
    fstype: "{{ d.fs.split('_')[1] == 'lvm' }}"
    resizefs: yes
    opts: "{{ d.fs_opts }}"
  loop: "{{ disks }}"
  loop_control:
    loop_var: d

- name: systemd mount
  template:
    dest: "/etc/systemd/system/{{ d.mount.replace('/','-')[1:-1] }}.mount"
    src: systemd.mount
    mode: '0644'
    owner: root
    group: root
  loop: "{{ disks }}"
  register: systemd_mounts
  loop_control:
    loop_var: d
    
- name: enable mounts
  systemd:
    name: "{{ item }}"
    state: started
    enabled: yes
  loop: "{{ systemd_mounts }}"
